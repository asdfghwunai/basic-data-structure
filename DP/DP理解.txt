
=======二维数组===========
注意初始化为 dp[N+1][V+1],N和V分别为行数组和列数组的元素个数

------0,1背包问题-------
1.转移方程为 
dp[i][j]=max{dp[i-1][j],dp[i-1][j-v[i]]+c[i]}

-------最长公共子串-------
1.转移方程为
if(str1[i]==str2[j])     //相等就由左上角转移过来
  dp[i][j]=dp[i-1][j-1]+1;
else
  dp[i][j]=0;
  

-------最长公共子序列-------
if(str1[i]==str2[j])     //相等就由左上角转移过来
  dp[i][j]=dp[i-1][j-1]+1;
else
  dp[i][j]=max{dp[i][j-1],dp[i-1][j]};  //不相等就看左边或上边

======一维数组==========
初始化数组为 dp[N+1]

------最长递增子序列-------
1.转移方程为
dp[0]=0;
dp[x]=max{1,dp[i]+1 for all i<x&&a[i]<a[x]}


------最大连续子序列和--------
1.转移方程为
dp[i]=max{a[i],di[i-1]+a[i]}  //反正ai必须有,如果前面的状态有帮助就要了，不然还不如只要自己，我感觉一切都假设已经得到最优解前面
